{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { ISchema } from 'ngx-schema-form';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  schemaJson: string;\n  errorMessage: string;\n  schema: ISchema;\n  value: any;\n\n  schemaJsonChange(schemaJson: string) {\n    this.errorMessage = null;\n    try {\n      this.schema = JSON.parse(schemaJson);\n    } catch (e) {\n      this.errorMessage = e.toString();\n    }\n  }\n\n  formErrorChange(err) {\n    console.log(err);\n    this.errorMessage = '123';\n  }\n}\n","<div style=\"display: flex\">\n  <div style=\"width: 50%\">\n    <div style=\"color: red; border: 1px solid red; padding: 20px\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n    <textarea [ngModel]=\"schemaJson\" (ngModelChange)=\"schemaJsonChange($event)\" rows=\"20\" style=\"width: 100%\"></textarea>\n  </div>\n  <div style=\"height: 100vh; overflow-y: auto; display: flex\">\n    <sf-form style=\"padding: 20px\" [schema]=\"schema\" (onChange)=\"value = $event.value\" (onErrorsChange)=\"formErrorChange($event)\"></sf-form>\n    <div *ngIf=\"value\">\n      <h4>Value</h4>\n      <pre>{{value | json}}</pre>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { DefaultWidgetRegistry, SchemaFormModule, WidgetRegistry } from 'ngx-schema-form';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    SchemaFormModule.forRoot()\n  ],\n  providers: [{ provide: WidgetRegistry, useClass: DefaultWidgetRegistry }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}